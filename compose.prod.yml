version: "3.8"

services: 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports: 
      - "5173:5173"
    env_file:
      - frontend/.env
    depends_on: 
      - backend
    networks:
      - frontend-network
      - backend-network
  
  backend: 
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    ports: 
      - 8000:8000
    env_file: 
      - backend/.env
    depends_on:
      - db
    networks:
      - backend-network
      - db-network
    
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    container_name: database
    ports: 
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db-network
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - db-network
      - backend-network
  
  nginx_proxy:
    image: jc21/nginx-proxy-manager:2.10.4
    container_name: nginx_proxy_manager
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8090:81
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - data:/data
      - letsencrypt:/etc/letsencrypt
    depends_on: 
      - frontend
      - backend
      - db
      - adminer
    networks:
      - frontend-network
      - backend-network

networks:
  frontend-network:
  backend-network:
  db-network:

volumes:
  postgres_data:
  data:
  letsencrypt: